<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
	>

<channel>
	<title>openSUSE Lizards</title>
	<atom:link href="https://lizards.opensuse.org/feed/" rel="self" type="application/rss+xml" />
	<link>https://lizards.opensuse.org</link>
	<description>Blogs and Ramblings of the openSUSE Members</description>
	<lastBuildDate>Wed, 06 Apr 2016 14:21:03 +0000</lastBuildDate>
	<language>en-US</language>
	<sy:updatePeriod>hourly</sy:updatePeriod>
	<sy:updateFrequency>1</sy:updateFrequency>
	<generator>https://wordpress.org/?v=4.4.2</generator>
	<item>
		<title>Highlights of development sprint 17</title>
		<link>https://lizards.opensuse.org/2016/04/06/highlights-of-development-sprint-17/</link>
		<comments>https://lizards.opensuse.org/2016/04/06/highlights-of-development-sprint-17/#respond</comments>
		<pubDate>Wed, 06 Apr 2016 14:21:03 +0000</pubDate>
		<dc:creator><![CDATA[Yast Team]]></dc:creator>
				<category><![CDATA[Distribution]]></category>
		<category><![CDATA[Factory]]></category>
		<category><![CDATA[Programming]]></category>
		<category><![CDATA[Systems Management]]></category>
		<category><![CDATA[YaST]]></category>

		<guid isPermaLink="false">http://lizards.opensuse.org/?p=11777</guid>
		<description><![CDATA[This is the fifth report since we started blogging about our development sprints and we have to admit that is the less impressive one so far. We probably underestimated the impact of the combination of Easters holidays and vacations of some team members. But although we were less productive than expected, we still have a [&#8230;]]]></description>
				<content:encoded><![CDATA[<p>This is the fifth report since we started blogging about our development sprints and we have to admit that is the less impressive one so far. We probably underestimated the impact of the combination of Easters holidays and vacations of some team members.</p>
<p>But although we were less productive than expected, we still have a couple of cool things to show to our beloved users and fellow developers.</p>
<h3>Handling of file conflicts in packages</h3>
<p>Until now the package installation in YaST ignored possible file conflicts in the installed packages. In contrast <code>zypper</code> already supports that check for some time.</p>
<p>File conflicts happen when two packages attempt to install files with the same name but different contents. If such conflicting packages are installed the conflicting files will be replaced losing the previous content. The final file content will also depend on the installation order so some issues might look &#8220;random&#8221;. The package which file has been overwritten is actually broken.</p>
<p>YaST now displays a confirmation dialog which asks whether to continue with installation despite the conflicts or abort. Previously YaST silently continued with the package installation which could cause serious troubles later.</p>
<p><img style="max-width:100%" alt="File conflicts" src="https://cloud.githubusercontent.com/assets/907998/13957750/e11da630-f04d-11e5-94a5-ee8b7a67b0ce.gif"></p>
<p>File conflicts should normally not happen, at least when you use the original distribution repositories. The OBS build checks for some file conflicts during package build and if there really is a file conflict that it should be marked on the RPM level (so you should not be allowed to select the conflicting packages for installation at first place).</p>
<p>It is up to the user to decide whether it is OK to ignore the conflict or not. If the conflict is for example in a documentation file then ignoring the conflict is usually no problem, but if the conflict is in a binary file or in a system library then it is potentially risky. If you are not sure &#8220;Abort&#8221; is the safe choice here.</p>
<p>In the description of <a href="https://github.com/yast/yast-yast2/pull/452">this pull request</a> you can see several additional animations showcasing the new feature in a variety of interfaces (Qt, NCurses, command line) and scenarios (software manager, inline installation of extra packages).</p>
<h3>Improvements in the installer self-update</h3>
<p>During this sprint, the self-update feature has received several improvements and changes. The most important one is that now it uses libzypp to fetch the updates, delegating signatures checking and that kind of stuff. Obviously, it also means that installer updates will be distributed using regular RPM repositories (instead of Driver Update Disks).</p>
<p><img style="max-width:100%" alt="Self-Update installer - Unknown GPG" src="//lizards.opensuse.org/wp-content/uploads/2016/04/c7f519fc-fbda-11e5-9367-2e08dd186c1d.png" /></p>
<p>On the other hand, user&#8217;s driver updates (specified through <a href="https://en.opensuse.org/SDB:Linuxrc#p_dud">dud</a> option) will take precedence over installer updates. They will be applied by Linuxrc anyway, but they&#8217;ll remain on top of installer updates.</p>
<h3>Fun with Ruby and proxies</h3>
<p>This is not exactly a new feature or fix in YaST, but something we learned and we decided could be worth sharing in order to save headaches to other people.</p>
<p>We got a report about YaST ignoring the <code>no_proxy</code> setting in <code>/etc/sysconfig/proxy</code>. After some investigation, it turned out the problem was not in YaST but in the underlying tools, that are also implemented in Ruby. Looks like Ruby have an unexpected (by us, at least) behavior dealing with proxy settings. If you are interested in the details, don&#8217;t miss the information we collected in <a href="https://github.com/yast/yast-registration/wiki/Proxy-Configuration-Issues">this page in the YaST2-Registration wiki</a>, which includes some background and a set of recommendations to follow when setting <code>no_proxy</code>.</p>
<h3>Unification of network setup during installation</h3>
<p>As a result of the analysis about how the network settings affect different installation modes and steps, we unified the position and shortcuts of the &#8220;Network Setup&#8221; button. That affected three installation steps.</p>
<p>A button was added to &#8220;Add On Product&#8221; to avoid going back and forth just to setup some special configuration for some of our network interfaces.</p>
<p><a href="//lizards.opensuse.org/wp-content/uploads/2016/04/addon.png" rel="attachment wp-att-11791"><img src="//lizards.opensuse.org/wp-content/uploads/2016/04/addon-300x225.png" alt="Add On Product" width="300" height="225" class="aligncenter size-medium wp-image-11791" srcset="http://lizards.opensuse.org/wp-content/uploads/2016/04/addon-300x225.png 300w, http://lizards.opensuse.org/wp-content/uploads/2016/04/addon-768x576.png 768w, http://lizards.opensuse.org/wp-content/uploads/2016/04/addon.png 1024w" sizes="(max-width: 300px) 100vw, 300px" /></a></p>
<p>In the &#8220;Disk Activation&#8221; step, the button was moved to the top-right corner to be consistent with other steps.</p>
<p><a href="//lizards.opensuse.org/wp-content/uploads/2016/04/disk_activation.png" rel="attachment wp-att-11792"><img src="//lizards.opensuse.org/wp-content/uploads/2016/04/disk_activation-300x225.png" alt="Disk Activation" width="300" height="225" class="aligncenter size-medium wp-image-11792" srcset="http://lizards.opensuse.org/wp-content/uploads/2016/04/disk_activation-300x225.png 300w, http://lizards.opensuse.org/wp-content/uploads/2016/04/disk_activation-768x576.png 768w, http://lizards.opensuse.org/wp-content/uploads/2016/04/disk_activation.png 1024w" sizes="(max-width: 300px) 100vw, 300px" /></a></p>
<p>And to round off consistency we also adjusted the keyboard shortcut in the registration screen.</p>
<p><a href="//lizards.opensuse.org/wp-content/uploads/2016/04/registration.png" rel="attachment wp-att-11793"><img src="//lizards.opensuse.org/wp-content/uploads/2016/04/registration-300x225.png" alt="Registration" width="300" height="225" class="aligncenter size-medium wp-image-11793" srcset="http://lizards.opensuse.org/wp-content/uploads/2016/04/registration-300x225.png 300w, http://lizards.opensuse.org/wp-content/uploads/2016/04/registration-768x576.png 768w, http://lizards.opensuse.org/wp-content/uploads/2016/04/registration.png 1024w" sizes="(max-width: 300px) 100vw, 300px" /></a></p>
<h3>New storage library keeps evolving</h3>
<p>This time we don&#8217;t have any big headline about the development of the new storage layer. We keep collaborating with experts in our attempt to ensure solid solutions for all situations. In addition to booting experts, the input from <a href="http://www.gnu.org/software/parted/">Parted</a> guru Petr Uzel was really valuable during this sprint. We took some important decisions about the integration of the new libstorage and libparted and we made progress in implementing a partitioning proposal that ensures a bootable system in all architectures and configurations, backed with highly readable tests and specs.</p>
<p>If time and bug reports permit, we&#8217;ll have much more to show after the next sprint&#8230; but that would be in three weeks from now. Meanwhile, have a lot of fun!</p>
]]></content:encoded>
			<wfw:commentRss>https://lizards.opensuse.org/2016/04/06/highlights-of-development-sprint-17/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>
		</item>
		<item>
		<title>AMD Catalyst 15.12 for openSUSE – new makerpm-amd-script is available</title>
		<link>https://lizards.opensuse.org/2016/03/17/amd-catalyst-15-12-for-opensuse-new-makerpm-amd-script-is-available/</link>
		<comments>https://lizards.opensuse.org/2016/03/17/amd-catalyst-15-12-for-opensuse-new-makerpm-amd-script-is-available/#comments</comments>
		<pubDate>Thu, 17 Mar 2016 18:41:13 +0000</pubDate>
		<dc:creator><![CDATA[Sebastian Siebert]]></dc:creator>
				<category><![CDATA[Base System]]></category>
		<category><![CDATA[Desktop]]></category>
		<category><![CDATA[GNOME]]></category>
		<category><![CDATA[KDE]]></category>
		<category><![CDATA[Kernel]]></category>
		<category><![CDATA[Packaging]]></category>
		<category><![CDATA[X.org]]></category>
		<category><![CDATA[11.4]]></category>
		<category><![CDATA[12.1]]></category>
		<category><![CDATA[12.2]]></category>
		<category><![CDATA[12.3]]></category>
		<category><![CDATA[13.1]]></category>
		<category><![CDATA[13.2]]></category>
		<category><![CDATA[42.1]]></category>
		<category><![CDATA[amd]]></category>
		<category><![CDATA[ATI]]></category>
		<category><![CDATA[driver]]></category>
		<category><![CDATA[fglrx]]></category>
		<category><![CDATA[Linux]]></category>
		<category><![CDATA[openSUSE]]></category>
		<category><![CDATA[radeon]]></category>
		<category><![CDATA[rpm]]></category>
		<category><![CDATA[Tumbleweed]]></category>

		<guid isPermaLink="false">http://lizards.opensuse.org/?p=11773</guid>
		<description><![CDATA[AMD has released the new AMD Catalyst 15.12 (Radeon Crimson Edition). My script replaces the existing packaging script with an updated packaging script. It supports up to Kernel 4.5. (Official support up to Kernel 3.19) Important note: The driver does not work on openSUSE Tumbleweed. Unfortunately, the version of X-server is too new for the [&#8230;]]]></description>
				<content:encoded><![CDATA[<p>AMD has released the new AMD Catalyst 15.12 (Radeon Crimson Edition). My script replaces the existing packaging script with an updated packaging script. It supports up to Kernel 4.5. (Official support up to Kernel 3.19)</p>
<p><strong>Important note:</strong> The driver does not work on openSUSE Tumbleweed. Unfortunately, the version of X-server is too new for the driver.</p>
<p>SHA1 is obsolete by now. The script used SHA256 for integrity of the downloaded files.</p>
<p>New Feature from packaging script:</p>
<ul>
<li>systemd support</li>
</ul>
<p>Resolved Issues:</p>
<ul>
<li>[SWDEV-82980] Ubuntu 15.10 fails when building the .deb packages</li>
</ul>
<p>Link: <a href="http://support.amd.com/en-us/kb-articles/Pages/AMDRadeonSoftwareCrimsonEdition15-12LINReleaseNotes.aspx">AMD Catalyst 15.12 Release Notes</a></p>
<p>Downloads:</p>
<ul>
<li>Script: <a href="https://www.sebastian-siebert.de/downloads/makerpm-amd-15.12.sh" target="_blank">makerpm-amd-15.12.sh</a></li>
<li>SHA1: <a href="https://www.sebastian-siebert.de/downloads/makerpm-amd-15.12.sh.sha256" target="_blank">makerpm-amd-15.12.sh.sha256</a></li>
</ul>
<p>Installation guide (English):<br />
<a href="http://en.opensuse.org/SDB:AMD_fglrx#Building_the_rpm_yourself">http://en.opensuse.org/SDB:AMD_fglrx#Building_the_rpm_yourself</a></p>
<p>Bruno Friedmann will build the new RPM packages in the fglrx repository. Stay tune!</p>
<p>If you find any issue with the driver. Don’t hesitate to contact me. I am in contact with AMD and can forward your issue to the right place. Feedback are welcome.</p>
<p>A report of your system is very helpful beside your feedback. You can generate it with the script:<br />
<code>su -c 'sh makerpm-amd-15.12.sh -ur'</code></p>
<p>Have a lot of fun!</p>
<p>Sebastian<br />
openSUSE member / Official AMD Packaging Script Maintainer for openSUSE<br />
German Blog: <a href="https://www.sebastian-siebert.de/2016/03/17/opensuse-proprietaeren-grafik-treiber-amd-catalyst-15-12-als-rpm-installieren/">openSUSE – proprietären Grafik-Treiber AMD Catalyst 15.12 als RPM installieren</a></p>
]]></content:encoded>
			<wfw:commentRss>https://lizards.opensuse.org/2016/03/17/amd-catalyst-15-12-for-opensuse-new-makerpm-amd-script-is-available/feed/</wfw:commentRss>
		<slash:comments>1</slash:comments>
		</item>
		<item>
		<title>Highlights of development sprint 16</title>
		<link>https://lizards.opensuse.org/2016/03/15/highlights-of-development-sprint-16/</link>
		<comments>https://lizards.opensuse.org/2016/03/15/highlights-of-development-sprint-16/#comments</comments>
		<pubDate>Tue, 15 Mar 2016 16:28:16 +0000</pubDate>
		<dc:creator><![CDATA[Yast Team]]></dc:creator>
				<category><![CDATA[Distribution]]></category>
		<category><![CDATA[Factory]]></category>
		<category><![CDATA[Programming]]></category>
		<category><![CDATA[Systems Management]]></category>
		<category><![CDATA[YaST]]></category>

		<guid isPermaLink="false">http://lizards.opensuse.org/?p=11748</guid>
		<description><![CDATA[After three weeks of work, another development sprint is over. So time for another report for our fellow geckos. As usual, quite some time was invested in boring bug fixes and small non-obvious improvements, but we also have some interesting stuff to talk about. Improved UI for the encrypted partitioning proposal We wanted to talk [&#8230;]]]></description>
				<content:encoded><![CDATA[<p>After three weeks of work, another development sprint is over. So time for another report for our fellow geckos. As usual, quite some time was invested in boring bug fixes and small non-obvious improvements, but we also have some interesting stuff to talk about.</p>
<h3>Improved UI for the encrypted partitioning proposal</h3>
<p>We wanted to talk about this feature not only because it has a visible impact in the user interface, but also because it&#8217;s a great example of collaboration among the different roles present in a Scrum Team. Formerly our Scrum development team was only formed by the developers of the YaST Team at SUSE. For this sprint (and future ones) the Scrum Team has been powered up with the addition of Ken Wimer as UI/UX expert and Jozef Pupava, one of the openQA.opensuse.org and openQA.suse.de operators.</p>
<p>We got a feature request to make encryption more visible in this dialog.</p>
<p><a href="//lizards.opensuse.org/wp-content/uploads/2016/03/28ea0408-e22b-11e5-8290-9ad25dd65776.png" rel="attachment wp-att-11753"><img src="//lizards.opensuse.org/wp-content/uploads/2016/03/28ea0408-e22b-11e5-8290-9ad25dd65776-225x300.png" alt="Old partitioning proposal dialog" width="225" height="300" class="aligncenter size-medium wp-image-11753" srcset="http://lizards.opensuse.org/wp-content/uploads/2016/03/28ea0408-e22b-11e5-8290-9ad25dd65776-225x300.png 225w, http://lizards.opensuse.org/wp-content/uploads/2016/03/28ea0408-e22b-11e5-8290-9ad25dd65776.png 326w" sizes="(max-width: 225px) 100vw, 225px" /></a></p>
<p>Being software developers used to tools like Vim and Git, we have to admit that the YaST team found the dialog perfectly usable and was having hard times thinking on a better alternative. Fortunately, we now have a UI/UX expert able to bring better alternatives like this one we finally implemented.</p>
<p><a href="//lizards.opensuse.org/wp-content/uploads/2016/03/93288588-e22b-11e5-8d9e-d6190a2ad13b.png" rel="attachment wp-att-11755"><img src="//lizards.opensuse.org/wp-content/uploads/2016/03/93288588-e22b-11e5-8d9e-d6190a2ad13b-219x300.png" alt="New dialog for partitioning proposal" width="219" height="300" class="aligncenter size-medium wp-image-11755" /></a></p>
<p>This kind of visual changes in the installer used to cause delays in openQA, because adapting the tests while keeping the openQA machinery running is not always trivial. The great news is that it didn&#8217;t happen this time because our particular openQA superhero was already watching over our steps all along the process.</p>
<p>So welcome into our Scrum process, Ken and Jozef!</p>
<h3>System roles</h3>
<p>A new feature was added to the installer making it possible to quickly adjust several settings for the installation with one shot. You can see a detailed description of the feature, including several screenshots and configurations options <a href="https://github.com/yast/yast-installation/wiki/System-Role">in this wiki page</a> at the Github repository of yast2-installation. And yes, for the impatient we also have a glorious screenshot!</p>
<p><a href="//lizards.opensuse.org/wp-content/uploads/2016/03/460729c4-ea98-11e5-95e7-1a8d90729ff1.png" rel="attachment wp-att-11751"><img src="//lizards.opensuse.org/wp-content/uploads/2016/03/460729c4-ea98-11e5-95e7-1a8d90729ff1-300x231.png" alt="System Role dialog" width="300" height="231" class="aligncenter size-medium wp-image-11751" srcset="http://lizards.opensuse.org/wp-content/uploads/2016/03/460729c4-ea98-11e5-95e7-1a8d90729ff1-300x231.png 300w, http://lizards.opensuse.org/wp-content/uploads/2016/03/460729c4-ea98-11e5-95e7-1a8d90729ff1.png 1024w" sizes="(max-width: 300px) 100vw, 300px" /></a></p>
<h3>Storage reimplementation: resizing partitions</h3>
<p>We have already explained in previous reports that we are performing an integral rewrite of the code managing partitioning and other storage tasks. During this sprint, the brand new library gained the ability to resize all kind of partitions (Linux, Windows, swap, etc.). It&#8217;s nothing that is going to hit the users in the short term but at least we have a couple of screenshots to see the premiere working (yes, we know that screenshots of terminals are not the most fancy stuff).</p>
<p><a href="//lizards.opensuse.org/wp-content/uploads/2016/03/shrink-vfat.png" rel="attachment wp-att-11758"><img src="//lizards.opensuse.org/wp-content/uploads/2016/03/shrink-vfat-300x195.png" alt="shrink-vfat" width="300" height="195" class="alignleft size-medium wp-image-11758" srcset="http://lizards.opensuse.org/wp-content/uploads/2016/03/shrink-vfat-300x195.png 300w, http://lizards.opensuse.org/wp-content/uploads/2016/03/shrink-vfat.png 674w" sizes="(max-width: 300px) 100vw, 300px" /></a></p>
<p><a href="//lizards.opensuse.org/wp-content/uploads/2016/03/grow-ntfs.png" rel="attachment wp-att-11756"><img src="//lizards.opensuse.org/wp-content/uploads/2016/03/grow-ntfs-300x195.png" alt="grow-ntfs" width="300" height="195" class="alignright size-medium wp-image-11756" srcset="http://lizards.opensuse.org/wp-content/uploads/2016/03/grow-ntfs-300x195.png 300w, http://lizards.opensuse.org/wp-content/uploads/2016/03/grow-ntfs.png 674w" sizes="(max-width: 300px) 100vw, 300px" /></a></p>
<p><br style="clear:both"></p>
<h3 style="clear:both">Installer self-update</h3>
<p>Starting on version 3.1.175, YaST is able to update itself during system installation. This feature will help to solve problems in the installer even after the media has been released. That&#8217;s a huge step towards improving YaST reliability.</p>
<p>The workflow is pretty simple: during system analysis YaST will search automatically for an update. If such update is found, YaST will download, verify (using GPG) and apply it. Finally, the installation will be resumed using the new version. Nice!</p>
<p>In the future, self update will be enabled by default. However, if for some reason you don&#8217;t want such a nice feature, you&#8217;re free to disable it. What is more: you can also craft your own update and use it instead the official one passing a custom URL to the installer.</p>
<p>If you&#8217;re curious, you can check the <a href="https://github.com/yast/yast-installation/blob/master/doc/SELF_UPDATE.md">technical details</a>.</p>
<h3>Storage reimplementation: the search for the perfect bootloader</h3>
<p>One of the goals of rewriting the storage layer was to make possible to cope with all the over-complicated requirements involved in the proposal of a good bootloader configuration. This time we don&#8217;t want the different scenarios to simply pop-up over time in a bug-report-oriented basis and start aggregating more and more branches to the existing code in order to support every one of those &#8220;new&#8221; scenarios.</p>
<p>Changes will come, for sure, but we need a solid ground based in experts knowledge to start building a flexible future-proof code to handle partitioning regarding bootloader. Thus, we started a round of contacts with several experts in all the hardware architectures supported by YaST in order to capture all the knowledge from their brains into a set of Ruby classes. It&#8217;s still a work in progress since squeezing people&#8217;s brains is not always easy, but we already have <a href="https://github.com/yast/yast-storage-ng/blob/master/doc/boot-partition.md">some preliminary document</a>.</p>
<h3>Consolidating continuous integration tools</h3>
<p>Continuous integration is a key aspect of software development, specially with methodologies like Scrum. Currently we use both <a href="https://travis-ci.org/">Travis</a> and <a href="http://jenkins-ci.org/">Jenkins</a> for it. Travis builds the pushed commits and pull requests at GitHub, while Jenkins takes care of the integration with the Open Build Service.</p>
<p>We are investing quite some effort trying to use Jenkins for everything. If you want to know more about the reasons or how the progress is going, check <a href="https://github.com/yast/yast.github.io/blob/master/doc/jenkins-integration.md">the detailed documentation</a>.</p>
<h3>And much more!</h3>
<p>As usual, this is just a small sample of the total work delivered by the team during the latest sprint (for Scrum and statistic&#8217;s lovers, it represents 34 story points out of a total of 87 delivered ones). Hopefully enough to keep you informed&#8230; and if it&#8217;s not, you know where you can reach us for more information!</p>
]]></content:encoded>
			<wfw:commentRss>https://lizards.opensuse.org/2016/03/15/highlights-of-development-sprint-16/feed/</wfw:commentRss>
		<slash:comments>2</slash:comments>
		</item>
		<item>
		<title>TOSprint or not to sprint?</title>
		<link>https://lizards.opensuse.org/2016/02/27/tosprint-or-not-to-sprint/</link>
		<comments>https://lizards.opensuse.org/2016/02/27/tosprint-or-not-to-sprint/#comments</comments>
		<pubDate>Sat, 27 Feb 2016 18:19:44 +0000</pubDate>
		<dc:creator><![CDATA[Bruno Friedmann]]></dc:creator>
				<category><![CDATA[Uncategorized]]></category>

		<guid isPermaLink="false">http://lizards.opensuse.org/?p=11732</guid>
		<description><![CDATA[Report of a week of sprint TOSprint in Paris has just ended (wiki page). What a week! First of all I want to warmfully thank the sponsors, especially Olivier Courtin from Oslandia for the organization, and Mozilla France for hosting us. What is TOSprint? Once a year a bunch of hackers from projects under OsGeo [&#8230;]]]></description>
				<content:encoded><![CDATA[<p><img src="https://wiki.osgeo.org/images/thumb/d/d1/Logo-TOSPrint_Paris.png/900px-Logo-TOSPrint_Paris.png" alt="TOSprint Paris 2016" style="width:200px;margin:18px;float:left" /><br />
<h2>Report of a week of sprint</h2>
<p>TOSprint in Paris has just ended (<a href="https://wiki.osgeo.org/wiki/Paris_Code_Sprint_2016">wiki page</a>).</p>
<p><b>What a week!</b></p>
<p>First of all I want to warmfully thank the sponsors, especially Olivier Courtin from Oslandia for the organization, and Mozilla France for hosting us.</p>
<h3>What is TOSprint?</h3>
<p>Once a year a bunch of hackers from projects under OsGeo umbrella, meet in a face to face sprint.<br />
This year it happenned in Paris with great number of participants (52).</p>
<p>There was globally five big groups, and if each community was running its own schedule,<br />
there was a lot of cross echanges too.</p>
<p><a href="https://flic.kr/p/ErD5E8"><img src="//lizards.opensuse.org/wp-content/uploads/2016/02/TOSprint_Paris_Mozilla.png" alt="TOSprint Mozilla" width="600" height="187" class="aligncenter size-full wp-image-11740" srcset="http://lizards.opensuse.org/wp-content/uploads/2016/02/TOSprint_Paris_Mozilla-300x94.png 300w, http://lizards.opensuse.org/wp-content/uploads/2016/02/TOSprint_Paris_Mozilla.png 600w" sizes="(max-width: 600px) 100vw, 600px" /><br />
<caption>Mateusz Łoskot</caption>
<p></a></p>
<h3>Personal objectives</h3>
<p>My main objective, except being enough luckly to be a sponsor, was to go there and be in direct contact with upstream.</p>
<p>This can help a lot to improve packages, and create new ones.</p>
<p>Moreover, as one of my openSUSE&#8217;s Application:Geo peer maintainer, Angelos Kalkas was also participating, we decided to make somes changes, and improve the situation of the repository.</p>
<p><span id="more-11732"></span></p>
<h3>openSUSE packaging</h3>
<p>We were using a Staging repository to test the global changes to minimize the breakage on the main repo, kinda à la Factory <img src="https://s.w.org/images/core/emoji/72x72/1f609.png" alt="&#x1f609;" class="wp-smiley" style="height: 1em; max-height: 1em;" /></p>
<p>Let&#8217;s talk about what you will get once the rebuild will finished:<br />
<b>* gdal</b> goes to 2.0.2 which is big jump since version 1.11</p>
<p><b>* postgis</b> got upgrade to 2.2.1 with sfcgal as dependency so 3D operations are avalaible.</p>
<p>I added two interesting extensions for postgresql/postgis database<br />
 <b>&#8211; pgRouting :</b> a long time missing extension in our repository. see <a href="http://pgrouting.org/">pgrouting.org</a><br />
 <b>&#8211; pointcloud :</b> allow you to store and work with pointcloud in postgresql and also contain a postgis extension. see <a href="https://github.com/pgpointcloud/pointcloud">https://github.com/pgpointcloud/pointcloud</a><br />
Both packages are respecting the postgresql/postgis naming scheme: so to install pointcloud on a postgresql94 server you will install postgresql94-pointcloud package.<br />
They are available at least for 13.2, Leap 42.1, Tumbleweed.</p>
<p>A big thanks to Paul Ramsey for his help resolving the issues raised. Especially the advise to stick to -j1 during compilation of postgis <img src="https://lizards.opensuse.org/wp-includes/images/smilies/simple-smile.png" alt=":-)" class="wp-smiley" style="height: 1em; max-height: 1em;" /></p>
<p><b>* PDAL <a href="http://www.pdal.io/">pdal.io</a></b> (with libght) is a point cloud abstraction layer which is under active development and should<br />
in the future replace libLAS once the compatible C interface will be written.<br />
  A big thanks to Howard Butler, for helping to get all packaging issues resolved.</p>
<p><b>* Mapserver :</b> <a href="http://mapserver.org">mapserver.org</a><br />
During the week, mapserver team made impressive changes:<br />
 &#8211; First by closing numerous github issues which didn&#8217;t get updates for a long time.<br />
They run a bot script which automatically close the github issue, and users get a nice message about it.<br />
Perhaps it could inspire us, on how we write closing ticket in bugtriage.<br />
<a href="https://www.flickr.com/photos/139706282@N06/24936988840/in/album-72157664338100169/" title="OSGeo TOSprint Paris"><img src="https://farm2.staticflickr.com/1508/24936988840_183b1b805f_n.jpg" width="320" height="213" alt="OSGeo TOSprint Paris"></a></p>
<pre style="background:gray;color:white;font-style:italic">
  This is an automated comment

  This issue has been closed due to lack of activity. This doesn't mean the issue is invalid,
  it simply got no attention within the last year. Please reopen with missing/relevant information
  if still valid.

  Typically, issues fall in this state for one of the following reasons:

      Hard, impossible or not enough information to reproduce
      Missing test case
      Lack of a champion with interest and/or funding to address the issue
</pre>
<p> &#8211; Part of the team took the challenge to update all the tutorial material.<br />
 &#8211; A number of question about the future of mapscript : lacking maintenance resources (humans and or funding)<br />
 &#8211; Bugfix release on thursday night. 6.4.3 and 7.0.1</p>
<p>For openSUSE, I&#8217;ve been discussing a lot with Thomas Bonfort.<br />
The idea would be to be able to propose at least two or more versions that receive security and bug fixes. Actually the 6.4 and the 7.0 branches.<br />
This will allow people to smoothly upgrade their map files, when there&#8217;s breakage or adaptation needed.</p>
<p>I classify this request as a good idea, and started analyzing what we can do. So its actually a work in progress.</p>
<h3>Conclusion</h3>
<p>There&#8217;s nothing more enthusiastic (for me) than participating to a FLOSS event. If some days are more frustrating than others, the others serve to build this free world we all need.<br />
So I would like to ping your attention : <b> all FLOSS software and communities need your contribution </b>. If you&#8217;re using one of them, become interested in how it is built, organized, start to learn today how to contribute, and enjoy your journey.</p>
<p>There&#8217;s more to come, especially on the mapserver side, and more and more packages.<br />
Stay tuned!</p>
]]></content:encoded>
			<wfw:commentRss>https://lizards.opensuse.org/2016/02/27/tosprint-or-not-to-sprint/feed/</wfw:commentRss>
		<slash:comments>1</slash:comments>
		</item>
		<item>
		<title>Highlights of development sprint 15</title>
		<link>https://lizards.opensuse.org/2016/02/25/highlights-of-development-sprint-15/</link>
		<comments>https://lizards.opensuse.org/2016/02/25/highlights-of-development-sprint-15/#comments</comments>
		<pubDate>Thu, 25 Feb 2016 11:49:55 +0000</pubDate>
		<dc:creator><![CDATA[Yast Team]]></dc:creator>
				<category><![CDATA[Distribution]]></category>
		<category><![CDATA[Factory]]></category>
		<category><![CDATA[Programming]]></category>
		<category><![CDATA[Systems Management]]></category>
		<category><![CDATA[YaST]]></category>

		<guid isPermaLink="false">http://lizards.opensuse.org/?p=11707</guid>
		<description><![CDATA[We know you have missed the usual summary from the YaST trenches. But don&#8217;t panic, here you got it! As usual, we will only cover some highlights, saving you from the gory details of the not so exciting regular bugfixing. Package notifications libzypp has a nice feature that enables packages to display notifications when they’re [&#8230;]]]></description>
				<content:encoded><![CDATA[<p>We know you have missed the usual summary from the YaST trenches. But don&#8217;t panic, here you got it! As usual, we will only cover some highlights, saving you from the gory details of the not so exciting regular bugfixing.</p>
<h3>Package notifications</h3>
<p>libzypp has a nice feature that enables packages to display notifications when they’re installed/upgraded. Zypper takes advantages of this feature and shows that information when a package is installed/upgraded. For example, if you install <code>mariadb</code> package, Zypper will inform you about setting up a database root password and so on.</p>
<p>If you installed any of those packages with YaST, you missed that piece of information… until now! Starting on <code>yast2 3.1.175</code> YaST will show packages notifications.</p>
<p><img class="aligncenter" src="https://cloud.githubusercontent.com/assets/15836/13257232/e7e23058-da45-11e5-8e7d-b116f47c686c.png" alt="installation-messages-qt" /></p>
<p><img class="aligncenter" src="https://cloud.githubusercontent.com/assets/15836/13257235/ea6ecade-da45-11e5-91ff-579cb257b859.png" alt="installation-messages-ncurses" /></p>
<p>The only exception is when doing a regular installation (or autoinstallation), as we want to show as few dialogs as possible.</p>
<h3>Registration Codes from a USB Stick</h3>
<p>During the installation of a SUSE Linux Enterprise product, you are asked for a registration code. Previously you had to remember it and type it by hand. Now the code can be read from USB storage.</p>
<p><img src="https://cloud.githubusercontent.com/assets/102056/13245125/4e0bf5de-da0b-11e5-839a-9d8d70052149.png" alt="regcode-from-usb" /><br />
<img src="https://cloud.githubusercontent.com/assets/102056/13255345/127cc83c-da46-11e5-97b5-bc6365361cfd.png" alt="regcode-from-usb-extensions" /></p>
<p>Insert a USB stick at installation boot time or at the latest before you proceed from the first installation screen (Language, Keyboard and License Agreement). That stick should contain the registration codes either at <code>/regcodes.txt</code> or at <code>/regcodes.xml</code>. In the registration dialogs, the input fields will be prefilled.</p>
<p>The syntax of the files is as follows. In the file identify the product with the name quoted by <code>zypper search --type product</code> or <code>SUSEConnect --list-extensions</code> (without the /version/architecture part).</p>
<p>regcodes.txt:
<pre>
SLES    cc36aae1
SLED    309105d4

sle-we  5eedd26a
sle-live-patching 8c541494
</pre>
<p>regcodes.xml: (xml wins if both xml and txt are present)
<pre>
&lt;?xml version="1.0"?&gt;
&lt;profile xmlns="http://www.suse.com/1.0/yast2ns" xmlns:config="http://www.suse.com/1.0/configns"&gt;
  &lt;suse_register&gt;
    &lt;!-- See https://www.suse.com/documentation/sles-12/singlehtml/book_autoyast/book_autoyast.html#CreateProfile.Register.Extension --&gt;
    &lt;addons config:type="list"&gt;
      &lt;addon&gt;
        &lt;!-- Name of add-on as listed by "zypper search --type product" --&gt;
        &lt;name&gt;sle-we&lt;/name&gt;
        &lt;reg_code&gt;5eedd26a&lt;/reg_code&gt;
      &lt;/addon&gt;
      &lt;addon&gt;
        &lt;name&gt;sle-live-patching&lt;/name&gt;
        &lt;reg_code&gt;8c541494&lt;/reg_code&gt;
      &lt;/addon&gt;
      &lt;addon&gt;
        &lt;!-- SLES is not an add-on but listing it here allows for combining
             several base product registration codes in a single file --&gt;
        &lt;name&gt;SLES&lt;/name&gt;
        &lt;reg_code&gt;cc36aae1&lt;/reg_code&gt;
      &lt;/addon&gt;
      &lt;addon&gt;
        &lt;name&gt;SLED&lt;/name&gt;
        &lt;reg_code&gt;309105d4&lt;/reg_code&gt;
      &lt;/addon&gt;
    &lt;/addons&gt;
  &lt;/suse_register&gt;
&lt;/profile&gt;
</pre>
<p></p>
<h3>Lot of Btrfs-related improvements in the expert partitioner</h3>
<p>We also invested quite some time improving the support for Btrfs in the expert partitioner. Implementing one requested feature and closing five bugs.</p>
<p>The following animation shows the feature #320296 (user friendly handling of subvolumes) in action, together with the fix to 965279 (Btrfs settings always overridden with default values).</p>
<p><img src="//lizards.opensuse.org/wp-content/uploads/2016/02/subvolumes-opt.gif" alt="subvolumes-opt" class="aligncenter" /></a></p>
<p>But we have even more screenshots and animations for the improvements in the expert partitioner. In the description of <a href="https://github.com/yast/yast-storage/pull/190">this pull request</a>, you have screenshots displaying the new dialog that was implemented to fix bug#928641. And in <a href="https://github.com/yast/yast-storage/pull/186">this other pull request</a>, you can see in action the fixes for bug#944252 (snapshots were offered for partitions other than root) and for bug#954691 (fstab options being forgotten for Btrfs partitions).</p>
<h3>Improving testability of the new storage code</h3>
<p>In recent posts, we reported how we are about to refactor the storage subsystem of YaST. The improved partition proposal for installation <a href="https://lizards.opensuse.org/2016/02/03/highlights-of-development-sprint-14/">presented in the previous summary</a> performs a lot of operations &#8211;  like analyzing what disks are there and what is on each one of them, checking if there already is enough free space and making a best guess on what partitions may be candidates to be removed to make space for a new Linux installation.</p>
<p>If there are many disks with many partitions, this can get complicated really quickly. So we need a reliable way to test it. Thus, we created a testing framework to build fake storage hardware (disks) with fake partitions and file systems. Although it&#8217;s fake hardware (we can&#8217;t create hard disks out of thin air&#8230; yet), it enables us to do unit tests without setting up virtual machines. With those tests we can cover a lot more scenarios that would otherwise be really difficult to test, with one or many disks, with many partitions of different kinds, with a previously existing RAID array or whatever.</p>
<p>One nice thing about the new libstorage is that it operates on &#8220;device graphs&#8221; that can be transformed into the GraphViz format for easy visualization. Here you have a nice diagram generated by libstorage based on some fake hardware created from <a href="https://gist.github.com/ancorgs/014c34c3c74b9949f3a2">this YAML specification</a>.</p>
<p><a href="//lizards.opensuse.org/wp-content/uploads/2016/02/fake-devicegraphs.png" rel="attachment wp-att-11723"><img src="//lizards.opensuse.org/wp-content/uploads/2016/02/fake-devicegraphs-300x136.png" alt="fake-devicegraphs" width="300" height="136" class="aligncenter size-medium wp-image-11723" srcset="http://lizards.opensuse.org/wp-content/uploads/2016/02/fake-devicegraphs-300x136.png 300w, http://lizards.opensuse.org/wp-content/uploads/2016/02/fake-devicegraphs.png 763w" sizes="(max-width: 300px) 100vw, 300px" /></a></p>
<h3>Better handling of wrong registration code for extensions</h3>
<p>We also spent some time improving the usability of the section for registration of extensions and modules. Now if the user selects several modules and the registration of some of them fails, the user will be kindly redirected back to the same dialog but only with inputs for the unregistered ones. From there, they can go back to unselect the failing extensions or retry with different (or even with the same) codes.</p>
<h3>Say goodbye to the &#8220;receive system mail&#8221; checkbox</h3>
<p>As the last step of the improvements done to the user creation dialog (see the <a href="https://lizards.opensuse.org/?p=11673">previous post</a> for more details). We removed the long-ago meaningless checkbox titled &#8220;Receive System Mail&#8221;. That leaded to the removal of quite some code&#8230; and removing code is usually a good thing. <img src="https://lizards.opensuse.org/wp-includes/images/smilies/simple-smile.png" alt=":-)" class="wp-smiley" style="height: 1em; max-height: 1em;" /></p>
<h3>Many other things</h3>
<p>As usual, this is just a short summary with some highlights. Many other stuff was implemented and several other bugs were fixed but, you know, we cannot blog about everything if we want to invest some time in debugging and coding. <img src="https://lizards.opensuse.org/wp-includes/images/smilies/simple-smile.png" alt=":-)" class="wp-smiley" style="height: 1em; max-height: 1em;" /></p>
<p>See you in the highlights for next sprint, in around three weeks.</p>
<p>PS.- If you want to be part of the fun, take a look to the YaST-related summer projects we have on the <a href="http://101.opensuse.org/">openSUSE mentoring page</a>.</p>
]]></content:encoded>
			<wfw:commentRss>https://lizards.opensuse.org/2016/02/25/highlights-of-development-sprint-15/feed/</wfw:commentRss>
		<slash:comments>1</slash:comments>
		</item>
		<item>
		<title>Sugar on openSUSE</title>
		<link>https://lizards.opensuse.org/2016/02/17/sugar-on-opensuse/</link>
		<comments>https://lizards.opensuse.org/2016/02/17/sugar-on-opensuse/#respond</comments>
		<pubDate>Wed, 17 Feb 2016 14:25:18 +0000</pubDate>
		<dc:creator><![CDATA[Jigish Gohil]]></dc:creator>
				<category><![CDATA[Derivative]]></category>
		<category><![CDATA[Desktop]]></category>
		<category><![CDATA[Distribution]]></category>
		<category><![CDATA[Education]]></category>
		<category><![CDATA[Packaging]]></category>

		<guid isPermaLink="false">http://lizards.opensuse.org/?p=11705</guid>
		<description><![CDATA[Built openSUSE Leap based Sugar test images on SUSE Studio, get it from here. If you wish to get involved with the project maintaining packages, fixing/reporting bugs, follow the links on the X11:Sugar build service project page.]]></description>
				<content:encoded><![CDATA[<p>Built openSUSE Leap based <a href="https://www.sugarlabs.org/">Sugar</a> test images on SUSE Studio, <a href="https://susestudio.com/a/F78UZ4/sugarsuse-leap-42-1">get it from here</a>.</p>
<p>If you wish to get involved with the project maintaining packages, fixing/reporting bugs, follow the links on the <a href="https://build.opensuse.org/project/show/X11:Sugar">X11:Sugar</a> build service project page.</p>
]]></content:encoded>
			<wfw:commentRss>https://lizards.opensuse.org/2016/02/17/sugar-on-opensuse/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>
		</item>
		<item>
		<title>Highlights of development sprint 14</title>
		<link>https://lizards.opensuse.org/2016/02/03/highlights-of-development-sprint-14/</link>
		<comments>https://lizards.opensuse.org/2016/02/03/highlights-of-development-sprint-14/#comments</comments>
		<pubDate>Wed, 03 Feb 2016 08:08:15 +0000</pubDate>
		<dc:creator><![CDATA[Yast Team]]></dc:creator>
				<category><![CDATA[Distribution]]></category>
		<category><![CDATA[Factory]]></category>
		<category><![CDATA[Programming]]></category>
		<category><![CDATA[Systems Management]]></category>
		<category><![CDATA[YaST]]></category>

		<guid isPermaLink="false">http://lizards.opensuse.org/?p=11673</guid>
		<description><![CDATA[Another three weeks period and another report from the YaST Team (if you don&#8217;t know what we are talking about, see highlights of sprint 13 and the presentation post). This was actually a very productive sprint although, as usual, not all changes have such an obvious impact on final users, at least in the short [&#8230;]]]></description>
				<content:encoded><![CDATA[<p>Another three weeks period and another report from the YaST Team (if you don&#8217;t know what we are talking about, see <a href="https://lizards.opensuse.org/2016/01/07/highlights-of-development-sprint-13/">highlights of sprint 13</a> and the <a href="https://lizards.opensuse.org/2015/12/15/lets-blog-about-yast/">presentation post</a>). This was actually a very productive sprint although, as usual, not all changes have such an obvious impact on final users, at least in the short term.</p>
<h3>Redesign and refactoring of the user creation dialog</h3>
<p>One of the most visible changes, at least during the installation process, is the revamped dialog for creating local users. There is a full screenshots-packed description of the original problems (at usability and code levels) and the implemented solution in the <a href="https://github.com/yast/yast-users/pull/84">description of this pull request</a> at Github.com.</p>
<p>Spoilers: the new dialog looks like the screenshot below and the openSUSE community now needs to decide the default behavior we want for Tumbleweed regarding password encryption methods. To take part in that discussion, read the mentioned description and reply to <a href="http://lists.opensuse.org/opensuse-factory/2016-01/msg00496.html">this thread</a> in the openSUSE Factory mailing list.</p>
<p><a href="//lizards.opensuse.org/wp-content/uploads/2016/02/b12a8f90-c51b-11e5-9ceb-659b6c77bac4.png" rel="attachment wp-att-11675"><img src="//lizards.opensuse.org/wp-content/uploads/2016/02/b12a8f90-c51b-11e5-9ceb-659b6c77bac4-300x225.png" alt="b12a8f90-c51b-11e5-9ceb-659b6c77bac4" width="300" height="225" class="aligncenter size-medium wp-image-11675" srcset="http://lizards.opensuse.org/wp-content/uploads/2016/02/b12a8f90-c51b-11e5-9ceb-659b6c77bac4-300x225.png 300w, http://lizards.opensuse.org/wp-content/uploads/2016/02/b12a8f90-c51b-11e5-9ceb-659b6c77bac4-768x576.png 768w, http://lizards.opensuse.org/wp-content/uploads/2016/02/b12a8f90-c51b-11e5-9ceb-659b6c77bac4.png 1024w" sizes="(max-width: 300px) 100vw, 300px" /></a></p>
<p>Beyond the obvious changes for the final user, the implementation of the new dialogs resulted in a much cleaner and more tested code base, including a new <a href="http://www.rubydoc.info/github/yast/yast-yast2/UI/InstallationDialog">reusable class</a> to greatly streamline the development of new installation dialogs in the future.</p>
<h3>One step further in the new libstorage: installation proposal</h3>
<p>In the highlights of the previous sprint, we already explained the YaST team is putting a lot of effort in rewriting the layer that access to disks, partitions, volumes and all that. One important milestone in such rewrite is the ability to examine a hard disk with a complex partitioning schema (including MS Windows partitions, a Linux installation and so on) and propose the operations that need to be performed in order to install (open)SUSE. It&#8217;s a more complex topic that it could look at the first glance.</p>
<p>During this sprint we created a command line tool that can perform that task. Is still not part of the installation process and will take quite some time until it gets there, but it&#8217;s already a nice showcase of the capabilities of the new library.</p>
<p><a href="//lizards.opensuse.org/wp-content/uploads/2016/02/new-storage-proposal-2016-01-27-1900-1.png" rel="attachment wp-att-11682"><img src="//lizards.opensuse.org/wp-content/uploads/2016/02/new-storage-proposal-2016-01-27-1900-1.png" alt="new-storage-proposal-2016-01-27-1900" width="738" height="636" class="aligncenter size-full wp-image-11682" srcset="http://lizards.opensuse.org/wp-content/uploads/2016/02/new-storage-proposal-2016-01-27-1900-1-300x259.png 300w, http://lizards.opensuse.org/wp-content/uploads/2016/02/new-storage-proposal-2016-01-27-1900-1.png 738w" sizes="(max-width: 738px) 100vw, 738px" /></a><br />
</p>
<h3>Fixed a crash when EULA download fails</h3>
<p>If a download error occurred during the installation of any module or extension requiring an EULA, YaST simply exited after displaying a pop-up error, as you can see here.</p>
<p><a href="//lizards.opensuse.org/wp-content/uploads/2016/02/0c444926-bb75-11e5-8e6e-029d018c14d3.gif" rel="attachment wp-att-11684"><img src="//lizards.opensuse.org/wp-content/uploads/2016/02/0c444926-bb75-11e5-8e6e-029d018c14d3.gif" alt="0c444926-bb75-11e5-8e6e-029d018c14d3" width="700" height="616" class="aligncenter size-full wp-image-11684" /></a></p>
<p>Now the workflow goes back to the extension selection, to retry or to deselect the problematic extension. Just like this.</p>
<p><a href="//lizards.opensuse.org/wp-content/uploads/2016/02/46fb22a6-bb75-11e5-9830-aff1d516e77e.gif" rel="attachment wp-att-11686"><img src="//lizards.opensuse.org/wp-content/uploads/2016/02/46fb22a6-bb75-11e5-9830-aff1d516e77e.gif" alt="46fb22a6-bb75-11e5-9830-aff1d516e77e" width="702" height="623" class="aligncenter size-full wp-image-11686" /></a></p>
<p></p>
<h3>Continuous integration for Snapper and (the current) libstorage</h3>
<p><a href="https://github.com/openSUSE/snapper">Snapper</a> and <a href="https://github.com/openSUSE/libstorage/">libstorage</a> now build the Git “master” branch continuously on <a href="http://ci.opensuse.org">ci.opensuse.org</a> (<a href="https://ci.opensuse.org/job/snapper-master/">S</a>, <a href="https://ci.opensuse.org/job/libstorage-master/">L</a>), and commit a passing build to the OBS development project (<a href="https://build.opensuse.org/package/show/YaST:Head/snapper">S</a>, <a href="https://build.opensuse.org/package/show/YaST:Head/libstorage">L</a>), and if the version number has changed, submit the package to Factory (<a href="https://build.opensuse.org/package/show/openSUSE:Factory/snapper">S</a>, <a href="https://build.opensuse.org/package/show/openSUSE:Factory/libstorage">L</a>).</p>
<p>The same set-up works on <a href="http://ci.suse.de">ci.suse.de</a> (<a href="https://ci.suse.de/job/snapper-master/">S</a>, <a href="https://ci.suse.de/job/libstorage-master/">L</a>), committing to the SUSE&#8217;s internal OBS instance (<a href="https://build.suse.de/package/show/Devel:YaST:Head/snapper">S</a>, <a href="https://build.suse.de/package/show/Devel:YaST:Head/libstorage">L</a>) and submitting to the future SLE12-SP2 (<a href="https://build.suse.de/package/show/SUSE:SLE-12-SP2:GA/snapper">S</a>, <a href="https://build.suse.de/package/show/SUSE:SLE-12-SP2:GA/libstorage">L</a>).</p>
<p>This brings these two packages up to the level of automation that the YaST team uses for the yast2-* packages, and allows releasing simple fixes even by team members who do not work on these packages regularly.</p>
<h3>Disk usage stats in installation and software manager: do not list subvolumes</h3>
<p>While installing software, YaST provides a visual overview of the free space in the different mount points of the system. With Btrfs and its subvolumes feature, the separation between a physical disk and its mount point is not that clear anymore. That resulted in wrong reports in YaST, like the one displayed in the left bottom corner of this screen.</p>
<p><a href="//lizards.opensuse.org/wp-content/uploads/2016/02/broken-disk-usage.png" rel="attachment wp-att-11695"><img src="//lizards.opensuse.org/wp-content/uploads/2016/02/broken-disk-usage.png" alt="broken-disk-usage" width="681" height="468" class="aligncenter size-full wp-image-11695" srcset="http://lizards.opensuse.org/wp-content/uploads/2016/02/broken-disk-usage-300x206.png 300w, http://lizards.opensuse.org/wp-content/uploads/2016/02/broken-disk-usage.png 681w" sizes="(max-width: 681px) 100vw, 681px" /></a></p>
<p>The actual calculation of free space is performed by libzypp (the Zypper library), YaST only takes care of rendering the result of that calculation in the screen. Thus, we closely collaborated with the Zypper developer, Michael Andres, to teach libzypp how to deal with Btrfs subvolumes. Thanks to his work, with any version of libzypp &gt;= 15.21 (already available in Tumbleweed), you can enjoy an error-free disk usage report.</p>
<p><a href="//lizards.opensuse.org/wp-content/uploads/2016/02/fixed-disk-usage.png" rel="attachment wp-att-11696"><img src="//lizards.opensuse.org/wp-content/uploads/2016/02/fixed-disk-usage.png" alt="fixed-disk-usage" width="681" height="468" class="aligncenter size-full wp-image-11696" srcset="http://lizards.opensuse.org/wp-content/uploads/2016/02/fixed-disk-usage-300x206.png 300w, http://lizards.opensuse.org/wp-content/uploads/2016/02/fixed-disk-usage.png 681w" sizes="(max-width: 681px) 100vw, 681px" /></a></p>
<p>To ensure we have no regressions, the YaST team also contributed a new test to openQA. See it <a href="https://openqa.opensuse.org/tests/117876/modules/yast2_i/steps/7">in action</a>.</p>
<h3>Cleanup dependencies in YaST systemd services</h3>
<p>We have received several bug reports about problems executing AutoYaST or YasT2-Firstboot in combination with complex network settings or third party services&#8230; and even in some simple scenarios. Many of these problems boil down to a single culprit &#8211; the dependencies of the YaST related systemd units.</p>
<p>During this sprint we have simplified the unit files for Tumbleweed and SLE, as you can see in <a href="https://github.com/yast/yast-installation/pull/332/files">this pull request</a>. It&#8217;s a small change but with a huge impact and several implications, so a lot of time was invested into testing during the sprint. The problems seem to be gone, but more AutoYaST and YaST-Firstboot testing would be highly appreciated.</p>
<h3>Many other things</h3>
<p>As usual, this is only a brief collection of highlights of all the job done during the sprint. Using Scrum terminology, this represents only 27 story points out of a total of 81 story points delivered by the team during this sprint. Using more mundane words, this is just a third part of what we have achieved during the last three weeks.</p>
<p>Hopefully, enough to keep you entertained until the next report in other three weeks!</p>
]]></content:encoded>
			<wfw:commentRss>https://lizards.opensuse.org/2016/02/03/highlights-of-development-sprint-14/feed/</wfw:commentRss>
		<slash:comments>3</slash:comments>
		</item>
		<item>
		<title>Running live image from RAM</title>
		<link>https://lizards.opensuse.org/2016/01/29/running-live-image-from-ram/</link>
		<comments>https://lizards.opensuse.org/2016/01/29/running-live-image-from-ram/#respond</comments>
		<pubDate>Fri, 29 Jan 2016 10:31:41 +0000</pubDate>
		<dc:creator><![CDATA[Jigish Gohil]]></dc:creator>
				<category><![CDATA[Derivative]]></category>
		<category><![CDATA[Education]]></category>

		<guid isPermaLink="false">http://lizards.opensuse.org/?p=11671</guid>
		<description><![CDATA[Some time back I wrote a patch to KIWI that allows running openSUSE live entirely from RAM(tmpfs). How to use it? Pass &#8220;toram&#8221; parameter at the boot menu. Try it on Li-f-e. Benefits: Running the OS from RAM make it lot more responsive than running from DVD or USB device, for example it is most [&#8230;]]]></description>
				<content:encoded><![CDATA[<p>Some time back I wrote a patch to KIWI that allows running openSUSE live entirely from RAM(tmpfs).<br />
<span id="more-11671"></span></p>
<p>How to use it?<br />
Pass &#8220;toram&#8221; parameter at the boot menu. Try it on <a href="https://en.opensuse.org/openSUSE:Education-Li-f-e">Li-f-e</a>.</p>
<p>Benefits:<br />
Running the OS from RAM make it lot more responsive than running from DVD or USB device, for example it is most useful for running a demo computer where many users try lot of applications installed in the live system. USB or the DVD can be ejected once the OS is loaded. It can be used to load OS to RAM directly from iso in a virtual machine as well.</p>
<p>Caveat:<br />
Needs enough RAM to copy the entire iso to RAM and then some spare to operate the OS, Li-f-e for instance would need minimum 5G RAM available. It also takes a bit longer to boot as the entire image is copied to RAM.</p>
]]></content:encoded>
			<wfw:commentRss>https://lizards.opensuse.org/2016/01/29/running-live-image-from-ram/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>
		</item>
		<item>
		<title>A brief 360° overview of my first board turn</title>
		<link>https://lizards.opensuse.org/2016/01/18/a-brief-360-overview-of-my-first-board-turn/</link>
		<comments>https://lizards.opensuse.org/2016/01/18/a-brief-360-overview-of-my-first-board-turn/#comments</comments>
		<pubDate>Mon, 18 Jan 2016 18:00:31 +0000</pubDate>
		<dc:creator><![CDATA[Bruno Friedmann]]></dc:creator>
				<category><![CDATA[Board]]></category>
		<category><![CDATA[Elections]]></category>
		<category><![CDATA[openSUSE]]></category>

		<guid isPermaLink="false">http://lizards.opensuse.org/?p=11647</guid>
		<description><![CDATA[You&#8217;ve certainly noticed that I didn&#8217;t run for a second turn, after my first 2 years. This doesn&#8217;t mean the election time and the actual campaign are boring If you are an openSUSE Member, we really want to have your vote, so go to Board Election Wiki and make your own opinion. The ballot should [&#8230;]]]></description>
				<content:encoded><![CDATA[<p>
You&#8217;ve certainly noticed that I didn&#8217;t run for a second turn, after my first 2 years. This doesn&#8217;t mean the election time and the actual campaign are boring <img src="https://lizards.opensuse.org/wp-includes/images/smilies/simple-smile.png" alt=":-)" class="wp-smiley" style="height: 1em; max-height: 1em;" /><br />
<br />If you are an openSUSE Member, we really want to have your vote, so go to <a href="https://en.opensuse.org/openSUSE:Board_election">Board Election Wiki</a> and make your own opinion.<br />
<br />The ballot should open tomorrow.
</p>
<p><img src="//lizards.opensuse.org/wp-content/uploads/2016/01/board-leaving-tigerfoot.png" alt="board-leaving-tigerfoot" width="370" height="262" class="alignleft size-full wp-image-11655" style="margin: 0px 20px 20px 0px" srcset="http://lizards.opensuse.org/wp-content/uploads/2016/01/board-leaving-tigerfoot-300x212.png 300w, http://lizards.opensuse.org/wp-content/uploads/2016/01/board-leaving-tigerfoot.png 370w" sizes="(max-width: 370px) 100vw, 370px" /></p>
<h3>Why not a second turn?</h3>
<p>Being a board member (present at almost every conference call, reading the mailing lists and other task) consume free time. It has increased during the last semester too. And we&#8217;ve got some new business opportunities here at Ioda-Net Sàrl in 2015, and those need also my attention for the next year(s). I prefer to be a retired Board member, than not being able to handle my responsabilities.<br />
But I&#8217;m not against the idea of a <i>&quot;I&#8217;ll be back&quot;</i> in a near future. Moreover with a bit more bandwidth in my free time, I will be able to continue my packaging stuff, and other contributions.
</p>
<h3 style="clear:both">What a journey!</h3>
<p>With the new campaign running, I found funny to bring back to light my <a href="https://en.opensuse.org/openSUSE:Board_election_platform_2013_tigerfoot">2013 platform</a> written 2 years ago. And spent 5 minutes on checking the differences with today. I&#8217;m inviting you to discover the small interview between me and myself <img src="https://lizards.opensuse.org/wp-includes/images/smilies/simple-smile.png" alt=":-)" class="wp-smiley" style="height: 1em; max-height: 1em;" />
</p>
<h4>1. Which sentences would you say again today?</h4>
<p>I&#8217;m a &quot;Fucking Green Dreamer&quot; of a world of collaboration, which will one day offer Freedom for everyone.<br />
<br />Clearly still a day by day mantra and leitmotiv. But even if I&#8217;m dreaming, I never forget that<br />
<b>Freedom has a price : Freedom will only be what you do for it.</b>
</p>
<p><span id="more-11647"></span></p>
<h4>2. Which thing you would not say again, or differently ?</h4>
<p>Well, as there&#8217;s no joker card, let&#8217;s start by this one:<br />
&quot;A Visible Active Board &gt; A Visible Active Project.&quot; With the experience and time, and interaction, (the one who said fight, get out please :-)), I would said this is not as easy as it sound first.<br />
I&#8217;m pretty sure, I was more quieter since I was on the board, than before. Because it&#8217;s too hard to make a clear distinction, when you just want to express something as &quot;a simple contributor&quot;: you are on the board, and then whatever you can try to trick the fact: you&#8217;re still a board member.<br />
<br />So making the Board visible like a kind of communicant Alien, will certainly not improve that much our project.<br />
It&#8217;s written everywhere, almost everybody agree, the board is not the lighthouse in the dark showing you the future.<br />
Anyone, I repeat, anyone in this community is a potential vector of a future for openSUSE.
</p>
<p>So in my past platform &quot;Guardians of the past, Managers of the present, Creators of the future.&quot; I would replace Creators of the future by kinda &quot;enabler&quot;</p>
<h4>3. In the last 2 years, where did openSUSE mostly evolve?</h4>
<p>I think we moved from a traditional way of building distribution to some creative alternative, the rolling but tested Tumbleweed, and the hybrid Leap are really good things that happened.<br />
I believe that if we have also some hard time on mailing list, which are exhausting, they also have a positive aspect (yeap:-)). If we fight, then it&#8217;s certainly because of our faith in something. Is this one defined? Not sure! But I&#8217;m pretty convinced that all members around have a good image of it.
</p>
<h4>4. What would be an advice to your successor (even if he doesn&#8217;t care about it)?</h4>
<p>We are a tooling community, we love tools. Beware of one thing, if you get hurt by a tool, you can become the worst asshole you&#8217;ve never met. With tools, you can also hurt other people.
</p>
<p>My advise, watch your step and keystroke!</p>
<p><img src="//lizards.opensuse.org/wp-content/uploads/2016/01/truly-green-yours.png" alt="truly-green-yours" width="230" height="217" class="alignleft size-full wp-image-11667" style="margin: 0px 20px 20px 0px" /></p>
<h4>5. Something more you would like to share?</h4>
<p>I&#8217;ve invested time and energy during 2014 and beginning of 2015, to run booth, talks, represent openSUSE&#8217;s project all around. It was awesome to go to those events and meet people, involved or interested about openSUSE.<br />
<br /> Perhaps some of you don&#8217;t know, but we have friends all around us, in many communities, and when the magic about working together appears, it just blast my heart.
</p>
<p>Thanks for reading and for your support during this period</p>
<p><b>Truly green yours</b></p>
]]></content:encoded>
			<wfw:commentRss>https://lizards.opensuse.org/2016/01/18/a-brief-360-overview-of-my-first-board-turn/feed/</wfw:commentRss>
		<slash:comments>8</slash:comments>
		</item>
		<item>
		<title>Li-f-e at BITA Show 2016</title>
		<link>https://lizards.opensuse.org/2016/01/10/li-f-e-at-bita-show-2016/</link>
		<pubDate>Sun, 10 Jan 2016 07:19:18 +0000</pubDate>
		<dc:creator><![CDATA[Jigish Gohil]]></dc:creator>
				<category><![CDATA[Ambassadors]]></category>
		<category><![CDATA[Education]]></category>
		<category><![CDATA[Marketing]]></category>

		<guid isPermaLink="false">http://lizards.opensuse.org/?p=11642</guid>
		<description><![CDATA[BITA IT Show, the biggest IT exhibition in western India is coming to town on 24-26 January, We will be there promoting Li-f-e. If you are in this part of the world, drop in to check it out.]]></description>
				<content:encoded><![CDATA[<p><a href="http://bitaindia.org/" target="_blank">BITA IT Show</a>, the biggest IT exhibition in western India is coming to town on 24-26 January, We will be there promoting <a href="https://en.opensuse.org/openSUSE:Education-Li-f-e" target="_blank">Li-f-e</a>. If you are in this part of the world, drop in to check it out.<br />
<a href="//lizards.opensuse.org/wp-content/uploads/2016/01/bita_a4_size_brochure_2016_FRONT_SIDE.jpg"><img src="//lizards.opensuse.org/wp-content/uploads/2016/01/bita_a4_size_brochure_2016_FRONT_SIDE-212x300.jpg" alt="bita_a4_size_brochure_2016_FRONT_SIDE" width="212" height="300" class="aligncenter size-medium wp-image-11643" srcset="http://lizards.opensuse.org/wp-content/uploads/2016/01/bita_a4_size_brochure_2016_FRONT_SIDE-212x300.jpg 212w, http://lizards.opensuse.org/wp-content/uploads/2016/01/bita_a4_size_brochure_2016_FRONT_SIDE-724x1024.jpg 724w" sizes="(max-width: 212px) 100vw, 212px" /></a></p>
]]></content:encoded>
			</item>
	</channel>
</rss>
